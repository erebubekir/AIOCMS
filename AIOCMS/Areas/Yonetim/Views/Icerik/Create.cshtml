@model AIOCMS.Models.tbl_Icerik

<h2> <a class="btn btn-default" href="@Html.YonetimUrl("Icerik")"><i class="glyphicon glyphicon-chevron-left"></i></a> İçerik Ekle</h2>

<form onsubmit="return create($(this));">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="col-md-12">Baslik</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Baslik, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Baslik, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">Icerik</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Icerik, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Icerik, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">Url</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">Resim</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Resim, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Resim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">Üst Id</label>
            <div class="col-md-12">
                @Html.DropDownList("UstId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UstId, "", new { @class = "text-danger" })
            </div>
        </div> 

        <div class="form-group">
            <label class="col-md-12">Aktiflik Durumu</label>
            <div class="col-md-12">
                <div class="checkbox" style="padding-left:20px;">
                    @Html.EditorFor(model => model.AktifDurumu)
                    @Html.ValidationMessageFor(model => model.AktifDurumu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">Onay Durumu</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.OnayDurumu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OnayDurumu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">İçerik Tipi</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.IcerikTipi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IcerikTipi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">Okunma Süresi</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.OkunmaSuresi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OkunmaSuresi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-12">Okunma Sayısı</label>
            <div class="col-md-12">
                @Html.EditorFor(model => model.OkunmaSayisi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OkunmaSayisi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Ekle" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function create(that) {
        var formData = $(that).serialize();
        ajaxSpeak("", formData, "");
        return false;
    }
</script>
