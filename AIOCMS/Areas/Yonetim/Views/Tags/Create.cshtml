@model AIOCMS.Models.tbl_Tags

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


<form onsubmit="return create($(this));">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>tbl_Tags</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Adi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Adi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Adi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AktifDurumu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AktifDurumu)
                    @Html.ValidationMessageFor(model => model.AktifDurumu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function create(that) {
        var formData = $(that).serialize();
        jQuery.ajax({
            method: "post", // gönderme tipi
            url: "../Tags/create", // gönderdiğimiz Adres
            data: formData, // gönderilcek veriler
            success: function (cevap) { // eğer başarılı ise gelen cevabı cevap değişkenine basar
                cevap = $.parseJSON(cevap);// Gelen Değeri Json Olarak Parse Ediyoruz
                if (cevap.status == "success") {

                    swal("Ekleme İşlemi Başarılı", "Listeye Yönelendirileceksiniz", cevap.status).then((value) => {
                        location.href = "../Tags";
                    });;


                }
                return false;
            }
        });
        return false;
    }
</script>